

A] Size of the work unit that results in best performance:
	
	:1

	What?
	
	In a single request, a worker gets only the prefix String of 
	zeroes to check for in a mined bitcoin. The worker then generates
	random strings, hashes, does pattern matching and mines bitcoin.

	
	Why this results in best performance?
	
	Because, every request made to the server is very cheap as the
	server just has to provide with pre-determined condition & the
	client does the rest of the computation in its own system thereby
	reducing load off the server.
	

B] Result for input k=4: (Please note that the bitcoins are displayed in
							format: inputString >> hashValue)
	
	[INFO] [09/13/2015 22:43:06.532] [main] [Remoting] Starting remoting
	[INFO] [09/13/2015 22:43:07.474] [main] [Remoting] Remoting started; listening on addresses :[akka.tcp://BitcoinMinersBoss@192.168.0.10:8083]
	[INFO] [09/13/2015 22:43:07.481] [main] [Remoting] Remoting now listens on addresses: [akka.tcp://BitcoinMinersBoss@192.168.0.10:8083]
	bhaveekdesai:Boss:uh5mnw >> 00002d411d1dd2e1689510750f17e100aff46b5d75da71a30f774a8dfbe5cb52
	bhaveekdesai:Boss:OY2N3T >> 0000afc06debfa207eddaad9df96564a1ab5fbcba3f452a4a810122354fbddc9
	bhaveekdesai:Boss:zB2RpR >> 000063ab60d74c08865eeea0153a3e7509a5baaddb1d2d4bd277607932ff459b
	bhaveekdesai:Boss:wrjjK2 >> 00006e2176bcbd127882fa5efc2196100b0cff75f85012d47eb697c28ac8dda7
	bhaveekdesai:Boss:senioD >> 00000e5bdf2c8de25720a4b217182b0a54dff39d1d433dab0bccaa8585ed9a1c
	bhaveekdesai:Boss:F7I6sh >> 00003b37b345023b6bc1ed705d86766b4e8bef6b66adaa0e7945949331cadfe1
	bhaveekdesai:Boss:CKgGft >> 000036ae564fd75e918b01a16add21d760aeef8fa60f6a6bc05f20eca6f61557
	bhaveekdesai:Boss:AYd00C >> 000082b9bbd2b41562dc9bdef10c38267db1083fb3b723721cce60485fc8edc3
	bhaveekdesai:Boss:SmiRuM >> 0000d0b6b645170217bb9956a7b3a43e5d5cfbf34128658a0c873851b33d7a97
	bhaveekdesai:Boss:Ovm74Y >> 0000ce69e1a4496c536b206dca58e4f6aadc9124dff95fa7a02a9aa10fbdfad5
	bhaveekdesai:Boss:wHPRkP >> 0000f849ee09a47b0501d300846a70058d75105e988a4119100667988120f8d2
	bhaveekdesai:Boss:s09PQ0 >> 0000ef57d52d5a5905fcdbda14a532104a66574e8474f5249a778b422ac10761
	bhaveekdesai:Boss:0lrNRw >> 00005c2887b0524d89120b53ae32efb5252875753ca9601dc6a22d68a2bb4d51
	bhaveekdesai:Boss:PR7B1d >> 0000be7a891b3eae4615bcf40d195ac2de517c7674d9eb82ef586dac93a7c933
	bhaveekdesai:Boss:UkasEg >> 00008c9452c0dfaecd854b7ac5f361d92672f93238df6bf2dec42a85f1336317
	bhaveekdesai:Boss:Ff9hY3 >> 0000444762322c08519da41bb3b3581bfdfdaaa2c4e91ab2eec59620f23da340
	bhaveekdesai:Boss:HesWPm >> 00006978d8a3b2be7e59f17bcef925612865969fd934ff7be9e2e00e07f501d4
	bhaveekdesai:Boss:8Ouprz >> 0000cf8c8a30e7c44ee30471d76b176f3e022f4ea2abdbe3f6e91e31c0321fec
	bhaveekdesai:Boss:bC4DJC >> 00007a405e154b58f616b8995c8ca3fd7343044a5858d6ec76a5b7f70ca057c8
	bhaveekdesai:Boss:cg75zU >> 00002d991e83c682929bd305866d103bb0767e105a01b098ac25167652d07a0d


C] 

D] bhaveekdesai:Boss:wy76xt >> 000000a8941f3851df94221f6d648703c91ae6aefe532c7cbef2693586275374

E] 2 machines
	
------------------------------------------------------------------------

=> Project implemented by: Bhaveek Deepak Desai (UFID: 45616629)

=> INSTRUCTIONS:

The source code is in:
project1.scala file located at: Bitcoin>src>main>scala

A. To run as a Server:
	1. Open Bitcoin>src>main>resources>application.conf file
	2. Replace the hostname value with the server's IP
	3. Go to the project directory: Bitcoin>
	4. Run: sbt clean compile "run 4"
		to start the server and mine bitcoins with 4 leading zeroes

B. To run as a Client:
	1. Ensure that a server is up at a remote system
	2. Ensure the hostname value in application.conf is the default (127.0.0.1)
	3. Go to the project directory: Bitcoin>
	4. Get the server's IP.
	5. Say, the server's IP is 192.168.0.10.
		Run: sbt clean compile "run 192.168.0.10"

------------------------------------------------------------------------
